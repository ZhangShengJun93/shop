<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.shop.mapper.BrandMapper">
    <cache type="cn.wolfcode.shop.cache.RedisCache"/>
    <resultMap id="BaseResultMap" type="cn.wolfcode.shop.domain.Brand">
        <id column="id" property="id"/>
        <result column="created_date" property="createdDate"/>
        <result column="last_modified_date" property="lastModifiedDate"/>
        <result column="version" property="version"/>
        <result column="found_date" property="foundDate"/>
        <result column="logo" property="logo"/>
        <result column="chinese_name" property="chineseName"/>
        <result column="english_name" property="englishName"/>
        <result column="description" property="description"/>
        <result column="url" property="url"/>
        <result column="sequence" property="sequence"/>
        <result column="mods" property="mods"/>
        <collection property="catalogs" ofType="cn.wolfcode.shop.domain.Catalog" column="id"
                    select="cn.wolfcode.shop.mapper.CatalogMapper.selectCatalogByBrabdId"/>
    </resultMap>
    <resultMap id="simpleResultMap" type="cn.wolfcode.shop.domain.Brand">
        <id column="id" property="id"/>
        <result column="chinese_name" property="chineseName"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `brand`
    where id = #{id}
  </delete>
    <delete id="deleteBrandCatalogRelation">
        delete from brand_catalog where brand_id=#{id}
    </delete>
    <insert id="insert"  useGeneratedKeys="true" keyProperty="id">
    insert into `brand` (created_date, last_modified_date, version, found_date, logo, chinese_name, 
      english_name, description, url, sequence, mods)
    values (#{createdDate}, #{lastModifiedDate}, #{version}, #{foundDate}, #{logo}, #{chineseName}, 
      #{englishName}, #{description}, #{url}, #{sequence}, #{mods})
  </insert>
    <!--维护品牌与商品分类中间表关系-->
    <insert id="insertBrandCatalogRelation">
    insert into brand_catalog (brand_id, catalog_id) values(#{BrandId},#{catalogId})
  </insert>
    <update id="updateByPrimaryKey" parameterType="cn.wolfcode.shop.domain.Brand">
    update `brand`
    set
      last_modified_date = #{lastModifiedDate},
      version = version+1,
      logo = #{logo},
      chinese_name = #{chineseName},
      english_name = #{englishName},
      description = #{description},
      url = #{url},
      sequence = #{sequence},
      mods = #{mods}
    where id = #{id}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, created_date, last_modified_date, version, found_date, logo, chinese_name, 
    english_name, description, url, sequence, mods
    from `brand`
    where id = #{id}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, created_date, last_modified_date, version, found_date, logo, chinese_name, 
    english_name, description, url, sequence, mods
    from `brand`
  </select>
    <!--共同的sql-->
    <sql id="base_where">
        <where>
            <if test="keyword != null and keyword != ''">
                and chinese_name like concat('%',#{keyword},'%')
            </if>
        </where>
    </sql>
    <!--查询满足条件的个数-->
    <select id="queryForCount" resultType="java.lang.Integer">
        select count(id)
        from brand
        <include refid="base_where"/>
    </select>
    <!--查询满足条件的结果集-->
    <select id="queryForList" resultMap="BaseResultMap">
        select id, created_date, last_modified_date, version, found_date, logo, chinese_name,
        english_name, description, url, sequence, mods
        from brand
        <include refid="base_where"/>
        limit #{startIndex} , #{pageSize}
    </select>
</mapper>